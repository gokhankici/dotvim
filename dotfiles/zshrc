# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="my-amuse"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

AUTO_CD="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(gitfast)

# User configuration

export SCALA_HOME=$HOME/local/share/scala

export PATH="\
$HOME/.opam/system/bin:\
$HOME/.local/bin:\
$HOME/bin:\
/usr/local/sbin:\
/usr/local/bin:\
/usr/sbin:\
/usr/bin:\
/sbin:\
/bin:\
/usr/games:\
/usr/local/games"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# ##########################################################################
# ############################## MY ADDITIONS ##############################
# ##########################################################################

# export TERM=screen-256color
export TERM=xterm-256color

# ##################################################
# ENV
# ##################################################
export EDITOR="$HOME/bin/edit"
export GOPATH="$HOME/gogogo"

# ##################################################
# ALIASES
# ##################################################
#alias tlmgr="cd $(dirname $(which tlmgr)) && sudo ./tlmgr -gui"
alias t='TERM=screen-256color tmux'
alias ta='TERM=screen-256color tmux attach -t'
alias tl='TERM=screen-256color tmux list-sessions'
alias tmux-takeover='TERM=screen-256color tmux detach-client -a -s'
alias si='stack install'
alias sc='stack clean'
alias sb='stack build'

alias sem='cd /home/gokhan/Dropbox/UCSD\ Academic/Quarter\ 2\ -\ Winter\ 2015'

alias setclip='xclip -selection c'
alias getclip='xclip -selection clipboard -o'
alias setclip_nl='head -c -1 | setclip'

alias copy_cd='pwd | head -c -1 | setclip'

alias open='xdg-open'

e() {
    if [[ $# -eq 1 ]]; then
        local F=$1:A

        if [[ -d $F ]]; then
            emacsclient -t -a "" -e "(dired \"$F\")"
        else
            emacsclient -t -a "" -e "(find-file \"$F\")"
        fi
    else
        emacsclient -t -a "" $@
    fi
}

# ##################################################
# Base16 Shell
# ##################################################
BASE16_SCHEME="default"
BASE16_SHELL="$HOME/.config/base16-shell/base16-$BASE16_SCHEME.dark.sh"
[[ -s $BASE16_SHELL ]] && . $BASE16_SHELL

# ##################################################
# FUNCTIONS
# ##################################################
start_in_tmux () {
	if $(tmux list-sessions | grep $1) ; then
		TERM=screen-256color tmux attach -t $1
	else
		TERM=screen-256color tmux new -s $1 $1
	fi
}

irc () {
	ssh -t goto "TERM=screen-256color /home/rkici/local/bin/tmux attach -t rcirc"
}

# OPAM configuration
. $HOME/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
export OCAMLLIB="/home/rami/.opam/4.01.0/lib/ocaml"

# ######################################################################
# ######################################################################
# ######################################################################

# Handle bookmarks. This uses the static named directories feature of
# zsh. Such directories are declared with `hash -d
# name=directory`. Both prompt expansion and completion know how to
# handle them. We populate the hash with directories.
#
# With autocd, you can just type `~-bookmark`. Since this can be
# cumbersome to type, you can also type `@@` and this will be turned
# into `~-` by ZLE.

MARKPATH=$ZSH/run/marks

# Add some static entries
hash -d log=/var/log
hash -d doc=/usr/share/doc

# Populate the hash
for link ($MARKPATH/*(N@)) {
	hash -d -- -${link:t}=${link:A}
}

vbe-insert-bookmark() {
	emulate -L zsh
	LBUFFER=${LBUFFER}"~-"
}
zle -N vbe-insert-bookmark
bindkey '@@' vbe-insert-bookmark

# Manage bookmarks
bookmark() {
	[[ -d $MARKPATH ]] || mkdir -p $MARKPATH
	if (( $# == 0 )); then
		# When no arguments are provided, just display existing
		# bookmarks
		for link in $MARKPATH/*(N@); do
			local markname="$fg[green]${link:t}$reset_color"
			local markpath="$fg[blue]${link:A}$reset_color"
			printf "%-30s -> %s\n" $markname $markpath
		done
	else
		# Otherwise, we may want to add a bookmark or delete an
		# existing one.
		local -a delete
		zparseopts -D d=delete
		if (( $+delete[1] && $# == 1 )); then
			# With `-d`, we delete an existing bookmark
			command rm $MARKPATH/$1
		else
			# Otherwise, add a bookmark to the current
			# directory. The first argument is the bookmark
			# name. `.` is special and means the bookmark should
			# be named after the current directory.
			local name=$1
			[[ $name == "." ]] && name=${PWD:t}
			ln -s $PWD $MARKPATH/$name
		fi
	fi
}

# ######################################################################
# ######################################################################
# ######################################################################

# z3 installation:
export LD_LIBRARY_PATH="$HOME/work/DOrder/external/z3/lib:$LD_LIBRARY_PATH:$HOME/.local/lib"
export PYTHONPATH="$PYTHONPATH:/home/gokhan/local/lib/python2.7/dist-packages"


# zsh-completions
plugins+=(zsh-completions)
autoload -U compinit && compinit
